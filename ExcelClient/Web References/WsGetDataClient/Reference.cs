//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace ExcelClient.WsGetDataClient {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSGetDataSoap", Namespace="http://tempuri.org/")]
    public partial class WSGetData : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginByPIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDBTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataSetProcOperationCompleted;
        
        private System.Threading.SendOrPostCallback execsqlOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataXMLProcOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataXMLWithSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataXMLWithSchemaProcOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataXmlByteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataXmlByteProcOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataXmlByteWithSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataXmlByteWithSchemaProcOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataZipByteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataZipByteProcOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataZipByteWithSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataZipByteWithSchemaProcOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataZipStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataZipStringProcOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataZipStringWithSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataZipStringWithSchemaProcOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataFormatByteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataFormatByteProcOperationCompleted;
        
        private System.Threading.SendOrPostCallback getZipDataFormatByteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getZipDataFormatByteProcOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSGetData() {
            this.Url = global::ExcelClient.Properties.Settings.Default.ExcelClient_WsGetDataClient_WSGetData;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event LoginByPIDCompletedEventHandler LoginByPIDCompleted;
        
        /// <remarks/>
        public event getDBTypeCompletedEventHandler getDBTypeCompleted;
        
        /// <remarks/>
        public event getDataSetCompletedEventHandler getDataSetCompleted;
        
        /// <remarks/>
        public event getDataSetProcCompletedEventHandler getDataSetProcCompleted;
        
        /// <remarks/>
        public event execsqlCompletedEventHandler execsqlCompleted;
        
        /// <remarks/>
        public event getDataXMLCompletedEventHandler getDataXMLCompleted;
        
        /// <remarks/>
        public event getDataXMLProcCompletedEventHandler getDataXMLProcCompleted;
        
        /// <remarks/>
        public event getDataXMLWithSchemaCompletedEventHandler getDataXMLWithSchemaCompleted;
        
        /// <remarks/>
        public event getDataXMLWithSchemaProcCompletedEventHandler getDataXMLWithSchemaProcCompleted;
        
        /// <remarks/>
        public event getDataXmlByteCompletedEventHandler getDataXmlByteCompleted;
        
        /// <remarks/>
        public event getDataXmlByteProcCompletedEventHandler getDataXmlByteProcCompleted;
        
        /// <remarks/>
        public event getDataXmlByteWithSchemaCompletedEventHandler getDataXmlByteWithSchemaCompleted;
        
        /// <remarks/>
        public event getDataXmlByteWithSchemaProcCompletedEventHandler getDataXmlByteWithSchemaProcCompleted;
        
        /// <remarks/>
        public event getDataZipByteCompletedEventHandler getDataZipByteCompleted;
        
        /// <remarks/>
        public event getDataZipByteProcCompletedEventHandler getDataZipByteProcCompleted;
        
        /// <remarks/>
        public event getDataZipByteWithSchemaCompletedEventHandler getDataZipByteWithSchemaCompleted;
        
        /// <remarks/>
        public event getDataZipByteWithSchemaProcCompletedEventHandler getDataZipByteWithSchemaProcCompleted;
        
        /// <remarks/>
        public event getDataZipStringCompletedEventHandler getDataZipStringCompleted;
        
        /// <remarks/>
        public event getDataZipStringProcCompletedEventHandler getDataZipStringProcCompleted;
        
        /// <remarks/>
        public event getDataZipStringWithSchemaCompletedEventHandler getDataZipStringWithSchemaCompleted;
        
        /// <remarks/>
        public event getDataZipStringWithSchemaProcCompletedEventHandler getDataZipStringWithSchemaProcCompleted;
        
        /// <remarks/>
        public event getDataFormatByteCompletedEventHandler getDataFormatByteCompleted;
        
        /// <remarks/>
        public event getDataFormatByteProcCompletedEventHandler getDataFormatByteProcCompleted;
        
        /// <remarks/>
        public event getZipDataFormatByteCompletedEventHandler getZipDataFormatByteCompleted;
        
        /// <remarks/>
        public event getZipDataFormatByteProcCompletedEventHandler getZipDataFormatByteProcCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginByPID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoginByPID(string PID) {
            this.Invoke("LoginByPID", new object[] {
                        PID});
        }
        
        /// <remarks/>
        public void LoginByPIDAsync(string PID) {
            this.LoginByPIDAsync(PID, null);
        }
        
        /// <remarks/>
        public void LoginByPIDAsync(string PID, object userState) {
            if ((this.LoginByPIDOperationCompleted == null)) {
                this.LoginByPIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginByPIDOperationCompleted);
            }
            this.InvokeAsync("LoginByPID", new object[] {
                        PID}, this.LoginByPIDOperationCompleted, userState);
        }
        
        private void OnLoginByPIDOperationCompleted(object arg) {
            if ((this.LoginByPIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginByPIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDBType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getDBType(string PID) {
            object[] results = this.Invoke("getDBType", new object[] {
                        PID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDBTypeAsync(string PID) {
            this.getDBTypeAsync(PID, null);
        }
        
        /// <remarks/>
        public void getDBTypeAsync(string PID, object userState) {
            if ((this.getDBTypeOperationCompleted == null)) {
                this.getDBTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDBTypeOperationCompleted);
            }
            this.InvokeAsync("getDBType", new object[] {
                        PID}, this.getDBTypeOperationCompleted, userState);
        }
        
        private void OngetDBTypeOperationCompleted(object arg) {
            if ((this.getDBTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDBTypeCompleted(this, new getDBTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getDataSet(string processID, string sql) {
            object[] results = this.Invoke("getDataSet", new object[] {
                        processID,
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getDataSetAsync(string processID, string sql) {
            this.getDataSetAsync(processID, sql, null);
        }
        
        /// <remarks/>
        public void getDataSetAsync(string processID, string sql, object userState) {
            if ((this.getDataSetOperationCompleted == null)) {
                this.getDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataSetOperationCompleted);
            }
            this.InvokeAsync("getDataSet", new object[] {
                        processID,
                        sql}, this.getDataSetOperationCompleted, userState);
        }
        
        private void OngetDataSetOperationCompleted(object arg) {
            if ((this.getDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataSetCompleted(this, new getDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataSetProc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getDataSetProc(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            object[] results = this.Invoke("getDataSetProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getDataSetProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            this.getDataSetProcAsync(processID, ProcName, paramArr, valueArr, null);
        }
        
        /// <remarks/>
        public void getDataSetProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr, object userState) {
            if ((this.getDataSetProcOperationCompleted == null)) {
                this.getDataSetProcOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataSetProcOperationCompleted);
            }
            this.InvokeAsync("getDataSetProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr}, this.getDataSetProcOperationCompleted, userState);
        }
        
        private void OngetDataSetProcOperationCompleted(object arg) {
            if ((this.getDataSetProcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataSetProcCompleted(this, new getDataSetProcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/execsql", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void execsql(string processID, string sql) {
            this.Invoke("execsql", new object[] {
                        processID,
                        sql});
        }
        
        /// <remarks/>
        public void execsqlAsync(string processID, string sql) {
            this.execsqlAsync(processID, sql, null);
        }
        
        /// <remarks/>
        public void execsqlAsync(string processID, string sql, object userState) {
            if ((this.execsqlOperationCompleted == null)) {
                this.execsqlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexecsqlOperationCompleted);
            }
            this.InvokeAsync("execsql", new object[] {
                        processID,
                        sql}, this.execsqlOperationCompleted, userState);
        }
        
        private void OnexecsqlOperationCompleted(object arg) {
            if ((this.execsqlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.execsqlCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getDataXML(string processID, string sql) {
            object[] results = this.Invoke("getDataXML", new object[] {
                        processID,
                        sql});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDataXMLAsync(string processID, string sql) {
            this.getDataXMLAsync(processID, sql, null);
        }
        
        /// <remarks/>
        public void getDataXMLAsync(string processID, string sql, object userState) {
            if ((this.getDataXMLOperationCompleted == null)) {
                this.getDataXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataXMLOperationCompleted);
            }
            this.InvokeAsync("getDataXML", new object[] {
                        processID,
                        sql}, this.getDataXMLOperationCompleted, userState);
        }
        
        private void OngetDataXMLOperationCompleted(object arg) {
            if ((this.getDataXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataXMLCompleted(this, new getDataXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataXMLProc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getDataXMLProc(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            object[] results = this.Invoke("getDataXMLProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDataXMLProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            this.getDataXMLProcAsync(processID, ProcName, paramArr, valueArr, null);
        }
        
        /// <remarks/>
        public void getDataXMLProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr, object userState) {
            if ((this.getDataXMLProcOperationCompleted == null)) {
                this.getDataXMLProcOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataXMLProcOperationCompleted);
            }
            this.InvokeAsync("getDataXMLProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr}, this.getDataXMLProcOperationCompleted, userState);
        }
        
        private void OngetDataXMLProcOperationCompleted(object arg) {
            if ((this.getDataXMLProcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataXMLProcCompleted(this, new getDataXMLProcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataXMLWithSchema", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getDataXMLWithSchema(string processID, string sql) {
            object[] results = this.Invoke("getDataXMLWithSchema", new object[] {
                        processID,
                        sql});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getDataXMLWithSchemaAsync(string processID, string sql) {
            this.getDataXMLWithSchemaAsync(processID, sql, null);
        }
        
        /// <remarks/>
        public void getDataXMLWithSchemaAsync(string processID, string sql, object userState) {
            if ((this.getDataXMLWithSchemaOperationCompleted == null)) {
                this.getDataXMLWithSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataXMLWithSchemaOperationCompleted);
            }
            this.InvokeAsync("getDataXMLWithSchema", new object[] {
                        processID,
                        sql}, this.getDataXMLWithSchemaOperationCompleted, userState);
        }
        
        private void OngetDataXMLWithSchemaOperationCompleted(object arg) {
            if ((this.getDataXMLWithSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataXMLWithSchemaCompleted(this, new getDataXMLWithSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataXMLWithSchemaProc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getDataXMLWithSchemaProc(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            object[] results = this.Invoke("getDataXMLWithSchemaProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getDataXMLWithSchemaProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            this.getDataXMLWithSchemaProcAsync(processID, ProcName, paramArr, valueArr, null);
        }
        
        /// <remarks/>
        public void getDataXMLWithSchemaProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr, object userState) {
            if ((this.getDataXMLWithSchemaProcOperationCompleted == null)) {
                this.getDataXMLWithSchemaProcOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataXMLWithSchemaProcOperationCompleted);
            }
            this.InvokeAsync("getDataXMLWithSchemaProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr}, this.getDataXMLWithSchemaProcOperationCompleted, userState);
        }
        
        private void OngetDataXMLWithSchemaProcOperationCompleted(object arg) {
            if ((this.getDataXMLWithSchemaProcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataXMLWithSchemaProcCompleted(this, new getDataXMLWithSchemaProcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataXmlByte", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getDataXmlByte(string processID, string sql) {
            object[] results = this.Invoke("getDataXmlByte", new object[] {
                        processID,
                        sql});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getDataXmlByteAsync(string processID, string sql) {
            this.getDataXmlByteAsync(processID, sql, null);
        }
        
        /// <remarks/>
        public void getDataXmlByteAsync(string processID, string sql, object userState) {
            if ((this.getDataXmlByteOperationCompleted == null)) {
                this.getDataXmlByteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataXmlByteOperationCompleted);
            }
            this.InvokeAsync("getDataXmlByte", new object[] {
                        processID,
                        sql}, this.getDataXmlByteOperationCompleted, userState);
        }
        
        private void OngetDataXmlByteOperationCompleted(object arg) {
            if ((this.getDataXmlByteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataXmlByteCompleted(this, new getDataXmlByteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataXmlByteProc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getDataXmlByteProc(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            object[] results = this.Invoke("getDataXmlByteProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getDataXmlByteProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            this.getDataXmlByteProcAsync(processID, ProcName, paramArr, valueArr, null);
        }
        
        /// <remarks/>
        public void getDataXmlByteProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr, object userState) {
            if ((this.getDataXmlByteProcOperationCompleted == null)) {
                this.getDataXmlByteProcOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataXmlByteProcOperationCompleted);
            }
            this.InvokeAsync("getDataXmlByteProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr}, this.getDataXmlByteProcOperationCompleted, userState);
        }
        
        private void OngetDataXmlByteProcOperationCompleted(object arg) {
            if ((this.getDataXmlByteProcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataXmlByteProcCompleted(this, new getDataXmlByteProcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataXmlByteWithSchema", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public byte[][] getDataXmlByteWithSchema(string processID, string sql) {
            object[] results = this.Invoke("getDataXmlByteWithSchema", new object[] {
                        processID,
                        sql});
            return ((byte[][])(results[0]));
        }
        
        /// <remarks/>
        public void getDataXmlByteWithSchemaAsync(string processID, string sql) {
            this.getDataXmlByteWithSchemaAsync(processID, sql, null);
        }
        
        /// <remarks/>
        public void getDataXmlByteWithSchemaAsync(string processID, string sql, object userState) {
            if ((this.getDataXmlByteWithSchemaOperationCompleted == null)) {
                this.getDataXmlByteWithSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataXmlByteWithSchemaOperationCompleted);
            }
            this.InvokeAsync("getDataXmlByteWithSchema", new object[] {
                        processID,
                        sql}, this.getDataXmlByteWithSchemaOperationCompleted, userState);
        }
        
        private void OngetDataXmlByteWithSchemaOperationCompleted(object arg) {
            if ((this.getDataXmlByteWithSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataXmlByteWithSchemaCompleted(this, new getDataXmlByteWithSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataXmlByteWithSchemaProc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public byte[][] getDataXmlByteWithSchemaProc(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            object[] results = this.Invoke("getDataXmlByteWithSchemaProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr});
            return ((byte[][])(results[0]));
        }
        
        /// <remarks/>
        public void getDataXmlByteWithSchemaProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            this.getDataXmlByteWithSchemaProcAsync(processID, ProcName, paramArr, valueArr, null);
        }
        
        /// <remarks/>
        public void getDataXmlByteWithSchemaProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr, object userState) {
            if ((this.getDataXmlByteWithSchemaProcOperationCompleted == null)) {
                this.getDataXmlByteWithSchemaProcOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataXmlByteWithSchemaProcOperationCompleted);
            }
            this.InvokeAsync("getDataXmlByteWithSchemaProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr}, this.getDataXmlByteWithSchemaProcOperationCompleted, userState);
        }
        
        private void OngetDataXmlByteWithSchemaProcOperationCompleted(object arg) {
            if ((this.getDataXmlByteWithSchemaProcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataXmlByteWithSchemaProcCompleted(this, new getDataXmlByteWithSchemaProcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataZipByte", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getDataZipByte(string processID, string sql) {
            object[] results = this.Invoke("getDataZipByte", new object[] {
                        processID,
                        sql});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getDataZipByteAsync(string processID, string sql) {
            this.getDataZipByteAsync(processID, sql, null);
        }
        
        /// <remarks/>
        public void getDataZipByteAsync(string processID, string sql, object userState) {
            if ((this.getDataZipByteOperationCompleted == null)) {
                this.getDataZipByteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataZipByteOperationCompleted);
            }
            this.InvokeAsync("getDataZipByte", new object[] {
                        processID,
                        sql}, this.getDataZipByteOperationCompleted, userState);
        }
        
        private void OngetDataZipByteOperationCompleted(object arg) {
            if ((this.getDataZipByteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataZipByteCompleted(this, new getDataZipByteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataZipByteProc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getDataZipByteProc(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            object[] results = this.Invoke("getDataZipByteProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getDataZipByteProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            this.getDataZipByteProcAsync(processID, ProcName, paramArr, valueArr, null);
        }
        
        /// <remarks/>
        public void getDataZipByteProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr, object userState) {
            if ((this.getDataZipByteProcOperationCompleted == null)) {
                this.getDataZipByteProcOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataZipByteProcOperationCompleted);
            }
            this.InvokeAsync("getDataZipByteProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr}, this.getDataZipByteProcOperationCompleted, userState);
        }
        
        private void OngetDataZipByteProcOperationCompleted(object arg) {
            if ((this.getDataZipByteProcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataZipByteProcCompleted(this, new getDataZipByteProcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataZipByteWithSchema", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public byte[][] getDataZipByteWithSchema(string processID, string sql) {
            object[] results = this.Invoke("getDataZipByteWithSchema", new object[] {
                        processID,
                        sql});
            return ((byte[][])(results[0]));
        }
        
        /// <remarks/>
        public void getDataZipByteWithSchemaAsync(string processID, string sql) {
            this.getDataZipByteWithSchemaAsync(processID, sql, null);
        }
        
        /// <remarks/>
        public void getDataZipByteWithSchemaAsync(string processID, string sql, object userState) {
            if ((this.getDataZipByteWithSchemaOperationCompleted == null)) {
                this.getDataZipByteWithSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataZipByteWithSchemaOperationCompleted);
            }
            this.InvokeAsync("getDataZipByteWithSchema", new object[] {
                        processID,
                        sql}, this.getDataZipByteWithSchemaOperationCompleted, userState);
        }
        
        private void OngetDataZipByteWithSchemaOperationCompleted(object arg) {
            if ((this.getDataZipByteWithSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataZipByteWithSchemaCompleted(this, new getDataZipByteWithSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataZipByteWithSchemaProc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public byte[][] getDataZipByteWithSchemaProc(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            object[] results = this.Invoke("getDataZipByteWithSchemaProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr});
            return ((byte[][])(results[0]));
        }
        
        /// <remarks/>
        public void getDataZipByteWithSchemaProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            this.getDataZipByteWithSchemaProcAsync(processID, ProcName, paramArr, valueArr, null);
        }
        
        /// <remarks/>
        public void getDataZipByteWithSchemaProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr, object userState) {
            if ((this.getDataZipByteWithSchemaProcOperationCompleted == null)) {
                this.getDataZipByteWithSchemaProcOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataZipByteWithSchemaProcOperationCompleted);
            }
            this.InvokeAsync("getDataZipByteWithSchemaProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr}, this.getDataZipByteWithSchemaProcOperationCompleted, userState);
        }
        
        private void OngetDataZipByteWithSchemaProcOperationCompleted(object arg) {
            if ((this.getDataZipByteWithSchemaProcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataZipByteWithSchemaProcCompleted(this, new getDataZipByteWithSchemaProcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataZipString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getDataZipString(string processID, string sql) {
            object[] results = this.Invoke("getDataZipString", new object[] {
                        processID,
                        sql});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDataZipStringAsync(string processID, string sql) {
            this.getDataZipStringAsync(processID, sql, null);
        }
        
        /// <remarks/>
        public void getDataZipStringAsync(string processID, string sql, object userState) {
            if ((this.getDataZipStringOperationCompleted == null)) {
                this.getDataZipStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataZipStringOperationCompleted);
            }
            this.InvokeAsync("getDataZipString", new object[] {
                        processID,
                        sql}, this.getDataZipStringOperationCompleted, userState);
        }
        
        private void OngetDataZipStringOperationCompleted(object arg) {
            if ((this.getDataZipStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataZipStringCompleted(this, new getDataZipStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataZipStringProc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getDataZipStringProc(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            object[] results = this.Invoke("getDataZipStringProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDataZipStringProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            this.getDataZipStringProcAsync(processID, ProcName, paramArr, valueArr, null);
        }
        
        /// <remarks/>
        public void getDataZipStringProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr, object userState) {
            if ((this.getDataZipStringProcOperationCompleted == null)) {
                this.getDataZipStringProcOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataZipStringProcOperationCompleted);
            }
            this.InvokeAsync("getDataZipStringProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr}, this.getDataZipStringProcOperationCompleted, userState);
        }
        
        private void OngetDataZipStringProcOperationCompleted(object arg) {
            if ((this.getDataZipStringProcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataZipStringProcCompleted(this, new getDataZipStringProcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataZipStringWithSchema", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getDataZipStringWithSchema(string processID, string sql) {
            object[] results = this.Invoke("getDataZipStringWithSchema", new object[] {
                        processID,
                        sql});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getDataZipStringWithSchemaAsync(string processID, string sql) {
            this.getDataZipStringWithSchemaAsync(processID, sql, null);
        }
        
        /// <remarks/>
        public void getDataZipStringWithSchemaAsync(string processID, string sql, object userState) {
            if ((this.getDataZipStringWithSchemaOperationCompleted == null)) {
                this.getDataZipStringWithSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataZipStringWithSchemaOperationCompleted);
            }
            this.InvokeAsync("getDataZipStringWithSchema", new object[] {
                        processID,
                        sql}, this.getDataZipStringWithSchemaOperationCompleted, userState);
        }
        
        private void OngetDataZipStringWithSchemaOperationCompleted(object arg) {
            if ((this.getDataZipStringWithSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataZipStringWithSchemaCompleted(this, new getDataZipStringWithSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataZipStringWithSchemaProc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getDataZipStringWithSchemaProc(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            object[] results = this.Invoke("getDataZipStringWithSchemaProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getDataZipStringWithSchemaProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            this.getDataZipStringWithSchemaProcAsync(processID, ProcName, paramArr, valueArr, null);
        }
        
        /// <remarks/>
        public void getDataZipStringWithSchemaProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr, object userState) {
            if ((this.getDataZipStringWithSchemaProcOperationCompleted == null)) {
                this.getDataZipStringWithSchemaProcOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataZipStringWithSchemaProcOperationCompleted);
            }
            this.InvokeAsync("getDataZipStringWithSchemaProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr}, this.getDataZipStringWithSchemaProcOperationCompleted, userState);
        }
        
        private void OngetDataZipStringWithSchemaProcOperationCompleted(object arg) {
            if ((this.getDataZipStringWithSchemaProcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataZipStringWithSchemaProcCompleted(this, new getDataZipStringWithSchemaProcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataFormatByte", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getDataFormatByte(string processID, string sql) {
            object[] results = this.Invoke("getDataFormatByte", new object[] {
                        processID,
                        sql});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getDataFormatByteAsync(string processID, string sql) {
            this.getDataFormatByteAsync(processID, sql, null);
        }
        
        /// <remarks/>
        public void getDataFormatByteAsync(string processID, string sql, object userState) {
            if ((this.getDataFormatByteOperationCompleted == null)) {
                this.getDataFormatByteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataFormatByteOperationCompleted);
            }
            this.InvokeAsync("getDataFormatByte", new object[] {
                        processID,
                        sql}, this.getDataFormatByteOperationCompleted, userState);
        }
        
        private void OngetDataFormatByteOperationCompleted(object arg) {
            if ((this.getDataFormatByteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataFormatByteCompleted(this, new getDataFormatByteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataFormatByteProc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getDataFormatByteProc(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            object[] results = this.Invoke("getDataFormatByteProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getDataFormatByteProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            this.getDataFormatByteProcAsync(processID, ProcName, paramArr, valueArr, null);
        }
        
        /// <remarks/>
        public void getDataFormatByteProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr, object userState) {
            if ((this.getDataFormatByteProcOperationCompleted == null)) {
                this.getDataFormatByteProcOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataFormatByteProcOperationCompleted);
            }
            this.InvokeAsync("getDataFormatByteProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr}, this.getDataFormatByteProcOperationCompleted, userState);
        }
        
        private void OngetDataFormatByteProcOperationCompleted(object arg) {
            if ((this.getDataFormatByteProcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataFormatByteProcCompleted(this, new getDataFormatByteProcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getZipDataFormatByte", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getZipDataFormatByte(string processID, string sql) {
            object[] results = this.Invoke("getZipDataFormatByte", new object[] {
                        processID,
                        sql});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getZipDataFormatByteAsync(string processID, string sql) {
            this.getZipDataFormatByteAsync(processID, sql, null);
        }
        
        /// <remarks/>
        public void getZipDataFormatByteAsync(string processID, string sql, object userState) {
            if ((this.getZipDataFormatByteOperationCompleted == null)) {
                this.getZipDataFormatByteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetZipDataFormatByteOperationCompleted);
            }
            this.InvokeAsync("getZipDataFormatByte", new object[] {
                        processID,
                        sql}, this.getZipDataFormatByteOperationCompleted, userState);
        }
        
        private void OngetZipDataFormatByteOperationCompleted(object arg) {
            if ((this.getZipDataFormatByteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getZipDataFormatByteCompleted(this, new getZipDataFormatByteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getZipDataFormatByteProc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getZipDataFormatByteProc(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            object[] results = this.Invoke("getZipDataFormatByteProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getZipDataFormatByteProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr) {
            this.getZipDataFormatByteProcAsync(processID, ProcName, paramArr, valueArr, null);
        }
        
        /// <remarks/>
        public void getZipDataFormatByteProcAsync(string processID, string ProcName, string[] paramArr, string[] valueArr, object userState) {
            if ((this.getZipDataFormatByteProcOperationCompleted == null)) {
                this.getZipDataFormatByteProcOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetZipDataFormatByteProcOperationCompleted);
            }
            this.InvokeAsync("getZipDataFormatByteProc", new object[] {
                        processID,
                        ProcName,
                        paramArr,
                        valueArr}, this.getZipDataFormatByteProcOperationCompleted, userState);
        }
        
        private void OngetZipDataFormatByteProcOperationCompleted(object arg) {
            if ((this.getZipDataFormatByteProcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getZipDataFormatByteProcCompleted(this, new getZipDataFormatByteProcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void LoginByPIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDBTypeCompletedEventHandler(object sender, getDBTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDBTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDBTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataSetCompletedEventHandler(object sender, getDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataSetProcCompletedEventHandler(object sender, getDataSetProcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataSetProcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataSetProcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void execsqlCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataXMLCompletedEventHandler(object sender, getDataXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataXMLProcCompletedEventHandler(object sender, getDataXMLProcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataXMLProcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataXMLProcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataXMLWithSchemaCompletedEventHandler(object sender, getDataXMLWithSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataXMLWithSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataXMLWithSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataXMLWithSchemaProcCompletedEventHandler(object sender, getDataXMLWithSchemaProcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataXMLWithSchemaProcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataXMLWithSchemaProcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataXmlByteCompletedEventHandler(object sender, getDataXmlByteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataXmlByteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataXmlByteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataXmlByteProcCompletedEventHandler(object sender, getDataXmlByteProcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataXmlByteProcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataXmlByteProcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataXmlByteWithSchemaCompletedEventHandler(object sender, getDataXmlByteWithSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataXmlByteWithSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataXmlByteWithSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataXmlByteWithSchemaProcCompletedEventHandler(object sender, getDataXmlByteWithSchemaProcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataXmlByteWithSchemaProcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataXmlByteWithSchemaProcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataZipByteCompletedEventHandler(object sender, getDataZipByteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataZipByteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataZipByteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataZipByteProcCompletedEventHandler(object sender, getDataZipByteProcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataZipByteProcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataZipByteProcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataZipByteWithSchemaCompletedEventHandler(object sender, getDataZipByteWithSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataZipByteWithSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataZipByteWithSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataZipByteWithSchemaProcCompletedEventHandler(object sender, getDataZipByteWithSchemaProcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataZipByteWithSchemaProcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataZipByteWithSchemaProcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataZipStringCompletedEventHandler(object sender, getDataZipStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataZipStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataZipStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataZipStringProcCompletedEventHandler(object sender, getDataZipStringProcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataZipStringProcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataZipStringProcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataZipStringWithSchemaCompletedEventHandler(object sender, getDataZipStringWithSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataZipStringWithSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataZipStringWithSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataZipStringWithSchemaProcCompletedEventHandler(object sender, getDataZipStringWithSchemaProcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataZipStringWithSchemaProcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataZipStringWithSchemaProcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataFormatByteCompletedEventHandler(object sender, getDataFormatByteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataFormatByteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataFormatByteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getDataFormatByteProcCompletedEventHandler(object sender, getDataFormatByteProcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataFormatByteProcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataFormatByteProcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getZipDataFormatByteCompletedEventHandler(object sender, getZipDataFormatByteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getZipDataFormatByteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getZipDataFormatByteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getZipDataFormatByteProcCompletedEventHandler(object sender, getZipDataFormatByteProcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getZipDataFormatByteProcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getZipDataFormatByteProcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591